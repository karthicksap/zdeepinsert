const console = require('../utils/logger.js');
const { destinations } = require('../utils/configuration.js');

if (
    Array.isArray(destinations) &&
    destinations.some(
        d => Object.keys(d).some(
            k => k.toLowerCase().startsWith('url.headers.')
        )
    )
) {
    const headers = {};
    destinations.forEach(destination => {
        headers[destination.name] = {};
        Object.keys(destination).forEach(k => {
            const parts = k.toLowerCase().split('url.headers.');
            if (parts.length === 2) {
                headers[destination.name][parts[1]] = destination[k];
            }
        });
    });
    const additionalHeadersMiddleware = (req, res, next) => {
        console.debug(
            'Entering additional-headers middleware'+
            `(x-correlationid: ${req.headers['x-correlationid']})`
        );
        if (req && req.internalUrl && req.internalUrl.route && req.internalUrl.route.destination) {
            const additionalHeaders = headers[req.internalUrl.route.destination];
            const keys = Object.keys(additionalHeaders);
            if (keys.length) {
                console.debug(`Adding additional headers to request ${JSON.stringify(additionalHeaders)}`);
                keys.forEach(key => {
                    req.headers[key] = additionalHeaders[key];
                });
            } else {
                console.debug(`No additional headers for destination with name '${req.internalUrl.route.destination}'`);
            }
        }
        next();
    };

    module.exports = additionalHeadersMiddleware;
} else {
    const nopAdditionalHeadersMiddleware = (req, res, next) => next();
    module.exports = nopAdditionalHeadersMiddleware;
}

